stop_times <- read.csv("~/Desktop/school.stuff/spring.2015/01.258/week.06/pset.03/MBTA_GTFS/stop_times.txt")
View(stop_times)
install.packages("swirl")
library("swirl")
swirl()
5 + 7
x <- 5+7
x
y <- x-3
y
library(swirl)
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
submit()
submit()
submit()
submit()
boring_function("My first function!")
boring_function
submit()
my_mean(c(4,5,10))
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num =5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[0]},c(8,4,0))
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[3]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
submit()
submit()
telegram("I forgot", "the damn", "space gets", "concatenated automatically")
submit()
mad_libs(place="Somerville", adjective="stoned", noun="bong")
submit()
submit()
"I" %p% "love" %p% "R!"
rm(list=ls())
frequencies <- read.csv("~/Downloads/DigitalMutatus_GTFS_071615/frequencies.txt")
View(frequencies)
as.POSIXlt(frequencies$start_time, format="%H:%M:%S)
$as.POSIXlt
?as.POSIXlt
rm(frequencies)
freq <- read.csv("~/Downloads/DigitalMutatus_GTFS_071615/frequencies.txt", stringsAsFactors=FALSE)
View(freq)
as.POSIXlt(frequencies$start_time, format="%H:%M:%S)
class(freq$start_time)
as.POSIXlt(freq$start_time,tz="",format="%H:%M:%S")
start_time <- as.POSIXlt(freq$start_time,tz="",format="%H:%M:%S")
start_time <- start_time -1
start_time <- as.POSIXlt(freq$start_time,tz="",format="%H:%M:%S")
start_time
start_time_rev <- start_time - 1
start_time_rev
rm(start_time_reve)
rm(start_time_rev)
start_time1 <- start_time != "2015-07-16 06:00:00 EDT"
start_time2 <- start_time[start_time1]
start_time3 <- start_time2-60
head(start_time3)
rm(list=ls())
# Variables related to your last day of recordings
medium <- "LinkedIn"
num_views <- 14
# Control structure for medium
if(medium == "LinkedIn") {
print("Showing LinkedIn information")
} else if(medium == "Facebook")
print("Showing Facebook information")
} else {
print("Unknown medium")
}
# Control structure for num_views
if(num_views > 15) {
print("You're popular!")
} else if(num_views > 10 & num_views < 15){
print("Your number of views is average")
} else{
print("Try to be more visible!")
}
# Variables related to your last day of recordings
li <- 15
fb <- 9
# Code the control-flow construct
if (li >= 15 & fb >= 15) {
sms <- 2*(li+fb)
}
else if (li < 10 & fb < 10) {
sms <- 0.5*(li+fb)
}
else {
sms <- li+fb
}
# Print the resulting sms to the console
print sms
library('swirl')
install.packages("swirl")
library('swirl')
rm(list=ls())
swirl()
rm(list = ls())
install.packages("sp")
install.packages("sp")
library(sp)
library(raster)
install.packages("raster")
install.packages("raster")
install.packages(sp)
install.packages("sp")
install.packages("raster")
install.packages("rasterVis")
install.packages("maptools")
install.packages(rgeos)
install.packages("rgeos")
install.packages("rgeos", repos="http://R-Forge.R-project.org", type="source")
require(rgeos)
install.packages("rgeos", repos="http://R-Forge.R-project.org", type="source")
install.packages('rgeos', type="source")
install.packages("rgeos", repos="http://R-Forge.R-project.org", type="source")
install.packages(rgeos)
install.packages('rgeos')
library(rgeos)
install.packages('sp')
install.packages("sp")
install.packages('raster')
library(rasterVis)
install.packages('rasterVis')
install.packages('maptools')
install.packages("dismo")
library(dismo)
gmap("France")
install.packages('rgdal')
R CMD INSTALL --configure-args='--with-gdal-config=/Library/Frameworks/GDAL.framework/unix/bin/gdal-config --with-proj-include=/Library/Frameworks/PROJ.framework/unix/include --with-proj-lib=/Library/Frameworks/PROJ.framework/unix/lib' rgdal_0.6-33.tar.gz
install.packages(rgeos)
install.packages("rgeos")
install.packages("rgeos", repos="http://R-Forge.R-project.org", type="source")
require(rgeos)
install.packages('dismo')
install.packages("dismo")
require(dismo)
gmap("Massachusetts")
install.packages('rgdal', type = "source", configure.args=c('--with-proj-include=/usr/local/include','--with-proj-lib=/usr/local/lib'))
require(dismo)
gmap("France")
install.packages("XML")
gmap("France")
mymap <- gmap("France", type = "satellite")
plot(mymap)
mymap <- gmap("Boston", type = "satellite")
plot(mymap)
getwd
getwd()
setwd("/Users/mrcampbell/documents/github/16_11.S947/week5")
setwd("/Users/mrcampbell/documents/github/16_11.S947/week5/data")
setwd("/Users/mrcampbell/documents/github/16_11.S947/week5")
edges <- read.csv("data/FoursqureLinksNetwork.csv")
edges <- read.csv("data/FoursqureCheckinNodes.csv")
nodes <- read.csv("data/FoursqureCheckinNodes.csv")
